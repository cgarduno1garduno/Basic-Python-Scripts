################################################################################
## @author Cristopher Garduno Luna
## 
## Single player, single ship Battleship!
## Generated by completing the "Battleship!" section of the Python module in 
##   Codecademy
################################################################################

from random import randint

# initialize board
board = []
for x in range(5): 
    board.append(["O"] * 5)

# general function to print board
def print_board(board):
    for row in board: 
        print " ".join(row)

# Displaying starting board
print "Let's play Battleship!"
print_board(board)

# Function to generate random indeces
def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

# generate hidden ship location
ship_row = random_row(board)
ship_col = random_col(board)

# Start the game!
for turn in range(4):
    # get user row and column guesses
    print turn+1
    guess_row = int(raw_input("Guess Row:"))
    guess_col = int(raw_input("Guess Col:"))

    # If you sink the ship, display win message and board
    if guess_row == ship_row and guess_col == ship_col:
        print "Congratulations! You sunk my battleship!"
        board[guess_row][guess_col] = "X"
        print_board(board)
        break
    else: # Error message for indeces outside of board
        if (guess_row < 0 or guess_row > 4) or \
           (guess_col < 0 or guess_col > 4):
            print "Error: That's not even in the ocean."
        # make sure player doesn't play the same location twice
        elif(board[guess_row][guess_col] == "X"):
            print "You guessed that one already."
            turn = turn-1
        else: # Player missed the ship! 
            print "You missed my battleship!"
            board[guess_row][guess_col] = "X"
    
    # print the board at the end of turns
    print_board(board)
    
    # After 4 turns, if the player hasn't sunk the ship then game over
    if turn==3:
        print "Game Over"
        # Display ship location
        board[ship_row][ship_col]="^"
        print_board(board)
